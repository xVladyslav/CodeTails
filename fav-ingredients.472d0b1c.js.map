{"mappings":"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","sources":["src/js/modal-ingredients.js","src/js/fetch-cocktails.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-3ab4a6da942acdaa.js","src/js/favorite-storage.js","src/js/get-ingredients-markup.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-faed1cfe6e8a9f70.js","src/js/fav-ingredients.js"],"sourcesContent":["import { fetchIngredientByName } from './fetch-cocktails';\nimport ingredientClose from 'bundle-text:../img/modal-close.svg';\nimport { FavoriteStorage } from './favorite-storage';\n\nconst ingredientModal = document.querySelector('#modal-ingredients-details');\nexport function showIngredientModal(event) {\n  if (event.target.dataset.name !== 'ingredient') {\n    return;\n  }\n  fetchIngredientByName(event.target.dataset.ingredient).then(data => {\n    ingredientModal.innerHTML = getIngredientModalMarkup(data);\n    const closeIngredientBtn = ingredientModal.querySelector(\n      '.ingredients__button-close'\n    );\n    const addRemoveBtn = ingredientModal.querySelector('.ingredients__button');\n    addRemoveBtn.addEventListener('click', handleAddRemoveIngredient);\n    closeIngredientBtn.addEventListener('click', closeIngredientModal);\n    ingredientModal.classList.toggle('show-modal');\n  });\n}\n\nfunction getIngredientModalMarkup(details) {\n  const isInFavorite = FavoriteStorage.isIngredientInFavorite(details.strIngredient);\n  const btnText = isInFavorite ? 'Remove from favorite' : 'Add to favorite';\n\n  return `\n    <div class=\"ingredients__btn\">\n    <button type=\"button\" class=\"ingredients__button-close\">\n    ${ingredientClose}\n    </button>\n  </div>\n  <h2 class=\"ingredients__title\">${details.strIngredient}</h2>\n  <h3 class=\"ingredients__topic\">${details.strType || '-'}</h3>\n  <div class=\"ingredients__line-container\">\n    <div class=\"ingredients__line\"></div>\n  </div>\n  <p class=\"ingredients__text\">\n    ${details.strDescription || 'Sorry, there is no description for this ingredient'}\n  </p>\n  <ul class=\"ingredients__list\">\n  <li class=\"ingredients__item\"> <span class=\"ingredients__black\">✶ </span> Type: ${\n    details.strType || '-'\n  }</li>\n  <li class=\"ingredients__item\"> <span class=\"ingredients__black\">✶ </span> Alcoholic: ${\n    details.strAlcohol || '-'\n  }</li>\n  <li class=\"ingredients__item\"> <span class=\"ingredients__black\">✶ </span> Alcohol by volume: ${\n    details.strABV || '-'\n  }</li>\n  </ul>\n  <button type=\"button\" class=\"ingredients__button\" data-name=\"add-remove\" data-id=\"${details.strIngredient}\">${btnText}</button>`;\n}\n\nfunction closeIngredientModal() {\n  ingredientModal.innerHTML = '';\n  ingredientModal.classList.toggle('show-modal');\n}\nexport function handleAddRemoveIngredient(event) {\n  const name = event.target.dataset.id;\n  const isOnIngredientsPage = !!document.querySelector('[data-page=\"fav-ingredients\"]');\n  let buttonFromCard = null;\n\n  if (isOnIngredientsPage) {\n    buttonFromCard = document.querySelector(`.btn__add[data-id=\"${name}\"]`);\n    buttonFromCard.classList.toggle('icon-active');\n  }\n\n  if (FavoriteStorage.isIngredientInFavorite(name)) {\n    FavoriteStorage.removeIngredient(name);\n    event.target.textContent = \"Add to favorite\";\n    if (isOnIngredientsPage) {\n      buttonFromCard.querySelector('.btn-text').innerHTML = 'Add to';\n    }\n  } else {\n    FavoriteStorage.addIngredient(name);\n    event.target.textContent = \"Remove from favorite\";\n    if (isOnIngredientsPage) {\n      buttonFromCard.querySelector('.btn-text').innerHTML = 'Remove';\n    }\n  }\n}","export function fetchRandomCocktails(amount) {\n  const allPromises = [];\n\n  for (let count = 0; count < amount; count++) {\n    allPromises.push(\n      fetch('https://thecocktaildb.com/api/json/v1/1/random.php').then(\n        response => response.json()\n      )\n    );\n  }\n\n  return Promise.all(allPromises).then(data => {\n    return data.map(item => item.drinks[0]);\n  });\n}\n\nexport function fetchCocktailsByName(name) {\n  return fetch(`https://thecocktaildb.com/api/json/v1/1/search.php?s=${name}`)\n    .then(response => response.json())\n    .then(({ drinks }) => {\n      if (!drinks) throw \"Sorry, we didn't find<br>any cocktail for you\";\n\n      return drinks;\n    });\n}\n\nexport function fetchCocktailById(id) {\n  return fetch(`https://thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`)\n    .then(response => response.json())\n    .then(({ drinks }) => drinks[0]);\n}\n\nexport function fetchIngredientByName(name) {\n  return fetch(`https://thecocktaildb.com/api/json/v1/1/search.php?i=${name}`)\n    .then(response => response.json())\n    .then(({ ingredients }) => ingredients[0]);\n}\nexport function fetchCocktailsByLetter(firstLetter) {\n  return fetch(\n    `https://thecocktaildb.com/api/json/v1/1/search.php?f=${firstLetter}`\n  )\n    .then(response => response.json())\n    .then(({ drinks }) => {\n      if (!drinks) throw \"Sorry, we didn't find<br>any cocktail for you\";\n\n      return drinks;\n    });\n}\n","module.exports = \"cb342cef5a333cae\";","export const FavoriteStorage = {\n    cocktailsKey: 'fav-cocktails',\n    ingredientsKey: 'fav-ingredients',\n\n    getCocktails() {\n        return JSON.parse(localStorage.getItem(this.cocktailsKey)) || [];\n    },\n    getIngredients() {\n        return JSON.parse(localStorage.getItem(this.ingredientsKey)) || [];\n    },\n    isCocktailInFavorite(id) {\n        return this.getCocktails().includes(id);\n    },\n    isIngredientInFavorite(name) {\n        return this.getIngredients().includes(name);\n    },\n    addCocktail(id) {\n        const tmp = this.getCocktails();\n        tmp.push(id);\n        localStorage.setItem(this.cocktailsKey, JSON.stringify(tmp));\n    },\n    removeCocktail(id) {\n        const tmp = this.getCocktails();\n        const idIndex = tmp.indexOf(id);\n\n        tmp.splice(idIndex, 1);\n        localStorage.setItem(this.cocktailsKey, JSON.stringify(tmp));\n    },\n    addIngredient(name) {\n        const tmp = this.getIngredients();\n        tmp.push(name);\n        localStorage.setItem(this.ingredientsKey, JSON.stringify(tmp));\n    },\n    removeIngredient(name) {\n        const tmp = this.getIngredients();\n        const idIndex = tmp.indexOf(name);\n\n        tmp.splice(idIndex, 1);\n        localStorage.setItem(this.ingredientsKey, JSON.stringify(tmp));\n    }\n}","import { showIngredientModal } from './modal-ingredients';\nimport heartIcon from 'bundle-text:../img/heart-icon.svg';\nimport { FavoriteStorage } from \"./favorite-storage\";\nexport function getDrinksMarkupIngredients(array) {\n    const markup = array.map(({ strIngredient, strType }) => {\n        return getCardMarkupIngredients(strIngredient, strType);\n    });\n    return markup;\n}\nfunction getCardMarkupIngredients(name, strType) {\n    const li = document.createElement('li');\n    li.className = 'cocktails__item cocktails__item-ingredients';\n    const isInFavorite = FavoriteStorage.isIngredientInFavorite(name);\n    const addRemoveClassName = isInFavorite ? 'btn__add icon-active' : 'btn__add';\n    const btnText = isInFavorite ? 'Remove' : 'Add to';\n    li.innerHTML = `\n            <div class=\"cocktails__descr cocktails__container\">\n            <h3 title=\"${name}\" class=\"cocktails__name cocktails__name--ingredients\">${name}</h3>\n            <p title=\"${strType}\" class=\"cocktails__category\">${strType || 'Common'}</p>\n            <div class=\"cocktails__btns\">\n                <button class=\"btn__learn\" type=\"button\" data-name=\"ingredient\" data-ingredient=\"${name}\" data-id=\"${name}\" >Learn more</button>\n                <button class=\"${addRemoveClassName}\" type=\"button\" data-name=\"add-remove\" data-id=\"${name}\"><span data-name=\"add-remove\" class=\"btn-text\">${btnText}</span> <span data-name=\"add-remove\" class=\"heart-icon\">${heartIcon}</span></button>\n            </div>\n        </div>\n        `;\n    li.addEventListener('click', handleIngredientCardClick);\n    return li;\n}\nexport function handleIngredientCardClick(event) {\n    const buttonName = event.target.dataset.name;\n    if (buttonName === 'ingredient') {\n        showIngredientModal(event);\n    }\n    if (buttonName === 'add-remove' || buttonName === 'heart-icon') {\n        const addRemoveBtn = event.currentTarget.querySelector('.btn__add');\n        const btnText = addRemoveBtn.querySelector('.btn-text');\n        const name = addRemoveBtn.dataset.id;\n        addRemoveBtn.classList.toggle('icon-active');\n        if (FavoriteStorage.isIngredientInFavorite(name)) {\n            FavoriteStorage.removeIngredient(name);\n            btnText.textContent = \"Add to\";\n        } else {\n            FavoriteStorage.addIngredient(name);\n            btnText.textContent = \"Remove\";\n        }\n    }\n}","module.exports = \"2864ff8e56bee9dd\";","import { getDrinksMarkupIngredients } from './get-ingredients-markup';\nimport { fetchIngredientByName } from './fetch-cocktails';\nimport { FavoriteStorage } from './favorite-storage';\n\nconst favContent = document.querySelector('.favorite-results');\nconst noFoundIngredients = `<p class=\"favorite__none\">\nYou haven't added any <br>favorite ingredients yet</p>`;\n\ngetIngredientsData();\n\nfunction makePromises() {\n  const favIngredients = FavoriteStorage.getIngredients();\n  const promises = favIngredients.reduce((acc, name) => {\n    acc.push(fetchIngredientByName(name));\n    return acc;\n  }, []);\n  return promises;\n}\n\nasync function getIngredientsData() {\n  const promises = makePromises();\n  const data = await Promise.all(promises).catch(error => console.log(error));\n\n  if (data.length === 0) {\n    favContent.innerHTML = noFoundIngredients;\n      return;\n  }\n\n  favContent.innerHTML = '';\n  favContent.append(...getDrinksMarkupIngredients(data));\n}\n"],"names":["$g0jhG","parcelRequire","$47d4969ee2893064$var$ingredientModal","document","querySelector","$47d4969ee2893064$export$63a3470e87583da6","event","target","dataset","name","fetchIngredientByName","ingredient","then","data","innerHTML","details","btnText","$iWO5T","FavoriteStorage","isIngredientInFavorite","strIngredient","$parcel$interopDefault","$2twQK","strType","strDescription","strAlcohol","strABV","$47d4969ee2893064$var$getIngredientModalMarkup","closeIngredientBtn","addEventListener","$47d4969ee2893064$export$d1cb1e06ee3a3100","$47d4969ee2893064$var$closeIngredientModal","classList","toggle","id","isOnIngredientsPage","buttonFromCard","removeIngredient","textContent","addIngredient","$ba6b9ae50b2ee407$export$873bae7cec94212e","amount","allPromises","count","push","fetch","response","json","Promise","all","map","item","drinks","$ba6b9ae50b2ee407$export$182d4be4e08f5e71","$ba6b9ae50b2ee407$export$161cc9256de3aab6","$ba6b9ae50b2ee407$export$60fd80745d01af43","ingredients","$ba6b9ae50b2ee407$export$567dd16123d89460","firstLetter","module","exports","$dcb480665d36fe4c$export$2ecec965e4a9a63a","cocktailsKey","ingredientsKey","getCocktails","JSON","parse","localStorage","getItem","this","getIngredients","isCocktailInFavorite","includes","addCocktail","tmp","setItem","stringify","removeCocktail","idIndex","indexOf","splice","$6alNL","$ecffe5614d5a4e8b$exports","$6de8abb5822fc5f7$export$bc608ed275c0c153","array","li","createElement","className","isInFavorite","addRemoveClassName","$6de8abb5822fc5f7$export$63cbea3aec574735","$6de8abb5822fc5f7$var$getCardMarkupIngredients","buttonName","showIngredientModal","addRemoveBtn","currentTarget","$868bd71daf520935$var$favContent","async","promises","reduce","acc","$868bd71daf520935$var$makePromises","catch","error","console","log","length","append","$868bd71daf520935$var$getIngredientsData"],"version":3,"file":"fav-ingredients.472d0b1c.js.map"}